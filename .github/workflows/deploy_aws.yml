name: 'Deploy - AWS'

on:
  workflow_dispatch:
    inputs:
      ark_version:
        description: 'ARK version to deploy (e.g. "v0.1.19", blank for latest)'
        required: false
        type: string
        default: ''

permissions:
  contents: read
  packages: write
  pages: write
  id-token: write

jobs:
  resolve_version:
    runs-on: ubuntu-24.04
    outputs:
      version: ${{ steps.resolve.outputs.version }}
      clean_version: ${{ steps.resolve.outputs.clean_version }}
      sha: ${{ steps.resolve.outputs.sha }}
      has_version: ${{ steps.resolve.outputs.has_version }}
    steps:
      - uses: actions/checkout@v4
      
      - name: Resolve ARK version
        id: resolve
        uses: ./.github/actions/resolve-version
        with:
          ark_version: ${{ github.event.inputs.ark_version }}

  deploy:
    runs-on: ubuntu-latest
    needs: [resolve_version]
    steps:
      - name: Validate version tag exists
        run: |
          if [ "${{ needs.resolve_version.outputs.has_version }}" != "true" ]; then
            echo "Error: Version tag is required for distribution environment deployment but does not exist"
            exit 1
          fi

      - uses: actions/checkout@v4
      
      - name: Install Helm
        uses: azure/setup-helm@v4
        with:
          version: '3.14.0'

      - name: Set up Kubectl
        uses: azure/setup-kubectl@v3
        with:
          version: "v1.33.0"

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          role-to-assume: ${{ secrets.AWS_GH_OIDC_ROLE_ARN }}
          aws-region: ${{ vars.AWS_REGION }}
          role-duration-seconds: 1200

      - name: Update kubeconfig for AWS EKS
        run: |
          aws eks update-kubeconfig --name ${{ vars.AWS_EKS_CLUSTER_NAME }} --region ${{ vars.AWS_REGION }} 
      
      - name: Deploy ARK Controller Helm Chart 
        uses: ./.github/actions/deploy-ark-helmchart
        with:
          version: ${{ needs.resolve_version.outputs.version }}
          clean_version: ${{ needs.resolve_version.outputs.clean_version }}
          namespace: ark-system
          image_repository: ${{ vars.DOCKER_REGISTRY || format('ghcr.io/{0}/{1}', github.repository_owner, github.event.repository.name) }}/ark-controller
          container_registry_server: ${{ vars.DOCKER_REGISTRY || format('ghcr.io/{0}/{1}', github.repository_owner, github.event.repository.name) }}
          container_registry_username: ${{ secrets.DOCKER_REGISTRY_USERNAME || github.actor }}
          container_registry_password: ${{ secrets.DOCKER_REGISTRY_PASSWORD || secrets.GITHUB_TOKEN }}
          rbac_enable: "true"
          timeout: "5m"
          install_cert_manager: "true"
          install_gateway_api: "true"
        env:
          GH_TOKEN: ${{ github.token }}

      - name: Deploy additional ARK services
        uses: ./.github/actions/deploy-additional-services
        with:
          clean_version: ${{ needs.resolve_version.outputs.clean_version }}
          image_registry: ${{ vars.DOCKER_REGISTRY || format('ghcr.io/{0}/{1}', github.repository_owner, github.event.repository.name) }}
          install_loadbalancer: "true"
          load_balancer_annotations: "\"service.beta.kubernetes.io/aws-load-balancer-scheme\"=\"internet-facing\""
          namespace: default
          pull_policy: IfNotPresent
          timeout: 10m